# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: backend Java CI with Gradle

on:
  pull_request:
    branches: [ "develop" ]
    paths:
      - 'backend/**'

defaults:
  run:
    working-directory: backend
  
permissions:
  contents: read
  checks: write
  pull-requests: write
  issues: read # for private repository

jobs:

  build:
    runs-on: ubuntu-20.04

    steps:
    - name: set up Repository
      uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'corretto'
        
    - name: Give permission for Gradle
      run: chmod +x gradlew
      
    - name: Cache Gradle Dependencies
      id: cache-gradle
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
        
    - name: Build with Gradle
      run: ./gradlew build
      
    - name: comments test result on PR
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: '**/build/test-results/test/TEST-*.xml'
        
    - name: comments test result in failed line if test failed
      uses: mikepenz/action-junit-report@v3
      if: always()
      with:
        report_paths: '**/build/test-results/test/TEST-*.xml'
#        token: ${{ github.token }}
